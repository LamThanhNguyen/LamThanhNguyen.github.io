<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mongodb on Liam Blogs</title>
    <link>http://localhost:1313/tags/mongodb/</link>
    <description>Recent content in Mongodb on Liam Blogs</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Jun 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/mongodb/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>I. 12 Key Design Pattern In MongoDB With Real World Use Case</title>
      <link>http://localhost:1313/database/12-key-design-pattern-in-mongodb-with-real-world-use-case/</link>
      <pubDate>Fri, 20 Jun 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/database/12-key-design-pattern-in-mongodb-with-real-world-use-case/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;p&gt;MongoDB provides a variety of design patterns to help you model data efficiently for real-world use cases. Below are 12 key patterns every developer should know, each illustrated with practical examples.&lt;/p&gt;&#xA;&lt;h1 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#1-attribute-pattern&#34;&gt;1. Attribute Pattern&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#2-computed-pattern&#34;&gt;2. Computed Pattern&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#3-bucket-pattern&#34;&gt;3. Bucket Pattern&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#4-schema-versioning-pattern&#34;&gt;4. Schema Versioning Pattern&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#5-tree-pattern&#34;&gt;5. Tree Pattern&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#6-subset-pattern&#34;&gt;6. Subset Pattern&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#7-approximation-pattern&#34;&gt;7. Approximation Pattern&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#8-outlier-pattern&#34;&gt;8. Outlier Pattern&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#9-polymorphic-pattern&#34;&gt;9. Polymorphic Pattern&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#10-extended-reference-pattern&#34;&gt;10. Extended Reference Pattern&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#11-pre-aggregation-pattern&#34;&gt;11. Pre-aggregation Pattern&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#12-document-versioning-pattern&#34;&gt;12. Document Versioning Pattern&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;1-attribute-pattern&#34;&gt;1. Attribute Pattern&lt;/h2&gt;&#xA;&lt;h3 id=&#34;scenario&#34;&gt;Scenario:&lt;/h3&gt;&#xA;&lt;p&gt;An online store has multiple product categories, such as smartphones, laptops, and clothing. Each category contains items with a wide range of attributes. For example:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
