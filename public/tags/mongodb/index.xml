<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mongodb on Liam Blogs</title>
    <link>https://lamthanhnguyen.github.io/tags/mongodb/</link>
    <description>Recent content in Mongodb on Liam Blogs</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Jun 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://lamthanhnguyen.github.io/tags/mongodb/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>I. 12 Key Design Pattern In MongoDB With Real World Use Case</title>
      <link>https://lamthanhnguyen.github.io/database/12-key-design-pattern-in-mongodb-with-real-world-use-case/</link>
      <pubDate>Fri, 20 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://lamthanhnguyen.github.io/database/12-key-design-pattern-in-mongodb-with-real-world-use-case/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;p&gt;MongoDB provides a variety of design patterns to help you model data efficiently for real-world use cases. Below are 12 key patterns every developer should know, each illustrated with practical examples.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-attribute-pattern&#34;&gt;1. Attribute Pattern&lt;/h2&gt;&#xA;&lt;h3 id=&#34;scenario&#34;&gt;Scenario:&lt;/h3&gt;&#xA;&lt;p&gt;An online store has multiple product categories, such as smartphones, laptops, and clothing. Each category contains items with a wide range of attributes. For example:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Smartphones: screen size, battery capacity, camera resolution, etc.&lt;/li&gt;&#xA;&lt;li&gt;Laptops: processor type, RAM size, storage type, etc.&lt;/li&gt;&#xA;&lt;li&gt;Clothing: size, color, material, etc.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Due to the variability and unpredictability of these attributes, using a rigid schema is inefficient.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
